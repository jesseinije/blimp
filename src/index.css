@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    -webkit-tap-highlight-color: transparent;
    scroll-behavior: smooth;
  }

  body {
    font-family: "Poppins", system-ui, -apple-system, BlinkMacSystemFont,
      "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  }

  /* Add this new class for the tab names */
  .tab-name {
    font-family: "Poppins", sans-serif;
    font-weight: 600;
    letter-spacing: -0.01em;
  }

  /* Optimize font loading for different weights */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 600;
  }

  p,
  span,
  div {
    font-weight: 400;
  }

  strong,
  b {
    font-weight: 600;
  }
}

@layer utilities {
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  .text-shadow {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .shadow-glow {
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.7);
  }

  /* Add to your existing CSS */
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
}

/* Custom animations */
@keyframes pulse-subtle {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

.animate-pulse-subtle {
  animation: pulse-subtle 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Album cover animation */
@keyframes album-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Dropdown animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.dropdown-animate {
  animation: scaleIn 0.2s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  transform-origin: top center;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05), 0 0 0 1px rgba(0, 0, 0, 0.05);
}

/* Tab transition animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.tab-transition-enter {
  animation: fadeIn 0.4s ease-out;
}

.tab-transition-exit {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}

.slide-up {
  animation: slideInUp 0.5s ease-out;
}

@keyframes scaleInPop {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.animate-scale-in {
  animation: scaleInPop 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

/* Add to src/index.css */

/* Safe area utilities */
.pb-safe {
  padding-bottom: env(safe-area-inset-bottom);
}

/* Dynamic viewport height utilities */
:root {
  --vh: 1vh;
}

@supports (height: 100dvh) {
  .h-screen-dynamic {
    height: 100dvh;
  }

  .min-h-screen-dynamic {
    min-height: 100dvh;
  }

  .max-h-screen-dynamic {
    max-height: 100dvh;
  }
}

/* iOS Safari specific fixes */
@supports (-webkit-touch-callout: none) {
  .h-screen {
    height: -webkit-fill-available;
  }

  .min-h-screen {
    min-height: -webkit-fill-available;
  }

  .max-h-screen {
    max-height: -webkit-fill-available;
  }
}

/* Add these CSS variables and utilities */
:root {
  --vh: 1vh;
}

/* Update existing utilities or add new ones */
.h-screen-dynamic {
  height: calc(var(--vh, 1vh) * 100);
}

.min-h-screen-dynamic {
  min-height: calc(var(--vh, 1vh) * 100);
}

.max-h-screen-dynamic {
  max-height: calc(var(--vh, 1vh) * 100);
}

/* iOS-specific fixes */
@supports (-webkit-touch-callout: none) {
  .h-screen-safe {
    height: calc(
      100vh - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px)
    );
  }
}

/* Ensure the body takes full height */
body {
  min-height: calc(var(--vh, 1vh) * 100);
  overflow-x: hidden;
}
